openapi: 3.1.0
info:
  title: Books API
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/api'

paths:
  /books:
    get:
      operationId: getAllBooks
      summary: Get all books
      
      description: Returns a list of all books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      operationId: createBook
      summary: Create a new book
      description: Creates a new book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: The created book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
                    example: "input wasn't valid"
          
  /books/{id}:
    get:
      operationId: getById
      summary: Get a book by ID
      description: Returns a book with the specified ID
      parameters:
        - name: id
          in: path
          description: The ID of the book
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    put:
      operationId: updateBook
      summary: Update a book by ID
      description: Updates a book with the specified ID
      parameters:
        - name: id
          in: path
          description: The ID of the book
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: The updated book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /users:
    post:
      operationId: createUser
      summary: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
                    example: "Passwords did not match"

components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The ID of the book
        title:
          type: string
          description: The title of the book
        author:
          type: string
          description: The author of the book
      required:
        - id
        - title
        - author
    UserCreate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        confirmPassword:
          type: string
      required:
        - name
        - email
        - password
        - confirmPassword
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        passwordHash:
          type: string
          format: password
    myBooks:
      type: object
      required:
        - id
        - user
        - book
        - read
      properties:
        id:
          type: string
          format: uuid
        user:
          $ref: '#/components/schemas/User'
        book:
          $ref: '#/components/schemas/Book'
        read:
          type: boolean
      xml:
        name: myBooks
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
        
          
